/*  
    üìå Resumen corto: 
        - Las variables son espacios en memoria que nos permiten almacenar valores para reutilizarlos
        - Se declaran con: 
            cost: Separa un espacio en memoria para almacenar un valor que no va a modificarse durante la 
                ejecuci√≥n del programa, pero puede ser accedido
            let: Define variables que tienen √°mbito de bloque y son la forma recomendada
            var: Define variables que tienen √°mbito global y no son recomendadas
        - Tipos b√°sicos: 
            string: Representa una cadena de texto
            number: Representa un n√∫mero, ya sea entero o decimal
            booleans: Representa el resultado de una opraci√≥n l√≥gica y es verdaro o falso
            undefined: Representa el valor de una variable que fue declara pero no asignada
            null: Representa el valor nulo, no es vacio pero no equivale a nada
*/

/*  üí° Ejemplos: */
var fechaIngreso = '2025-01-01'
let nombre = 'Ana'
const edad = 25
let esEstudiante = true

if (edad == 25) {
    var fechaIngreso = '2025-01-31'
    let nombre = 'Mar√≠a'
}

nombre = 'Fernanda'

console.log(fechaIngreso)
console.log(nombre)

console.log(typeof nombre)
console.log(typeof edad)
console.log(typeof esEstudiante)

/* ‚ö†Ô∏è Preguntas frecuentes/errores comunes: 
    ‚ùå Usar const y luego intentar cambiar el valor
    ‚ùå Confundir la asignacion = con == o === que son de comparaci√≥n
    ‚ùå Confundir los √°mbitos de las variables declaradas
    ‚ùå Tratar de acceder a una variable no declarada (generar error)
*/
